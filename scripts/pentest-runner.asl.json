{
  "Comment": "Kick off Penetration Testing VM",
  "StartAt": "Initiate",
  "States": {
    "Initiate": {
      "Type": "Task",
      "Next": "ParseOutput",
      "Parameters": {
        "Bucket.$": "$.bucket",
        "Key.$": "$.key"
      },
      "OutputPath": "$.Body",
      "Resource": "arn:aws:states:::aws-sdk:s3:getObject"
    },
    "ParseOutput": {
      "Type": "Pass",
      "Next": "AddCounter",
      "Parameters": {
        "result.$": "States.StringToJson($)"
      },
      "OutputPath": "$.result"
    },
    "AddCounter": {
      "Type": "Pass",
      "Next": "StartKali",
      "Result": {
        "counter": 0
      },
      "ResultPath": "$.scratch"
    },
    "StartKali": {
      "Type": "Task",
      "Parameters": {
        "InstanceIds.$": "States.Array($.instance_id)"
      },
      "Resource": "arn:aws:states:::aws-sdk:ec2:startInstances",
      "Next": "DescribeInstanceInformation",
      "ResultPath": null
    },
    "DescribeInstanceInformation": {
      "Type": "Task",
      "Parameters": {
        "Filters": [
          {
            "Key": "InstanceIds",
            "Values.$": "States.Array($.instance_id)"
          }
        ]
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:describeInstanceInformation",
      "Next": "CheckSSMAvailable",
      "ResultPath": "$.data"
    },
    "CheckSSMAvailable": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.scratch.counter",
          "NumericGreaterThan": 10,
          "Next": "StopKali"
        },
        {
          "And": [
            {
              "Variable": "$.data.InstanceInformationList[0]",
              "IsPresent": true
            },
            {
              "Variable": "$.data.InstanceInformationList[0].PingStatus",
              "StringEquals": "Online"
            }
          ],
          "Next": "PrepPenTest"
        }
      ],
      "Default": "WaitForSSM"
    },
    "PrepPenTest": {
      "Type": "Pass",
      "Next": "StartPenTest",
      "Result": {
        "counter": 0
      },
      "ResultPath": "$.scratch"
    },
    "WaitForSSM": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "IncrementCounter"
    },
    "IncrementCounter": {
      "Type": "Pass",
      "Next": "DescribeInstanceInformation",
      "Parameters": {
        "counter.$": "States.MathAdd($.scratch.counter, 1)"
      },
      "ResultPath": "$.scratch"
    },
    "StartPenTest": {
      "Type": "Task",
      "Parameters": {
        "DocumentName": "AWS-RunShellScript",
        "Targets": [
          {
            "Key": "InstanceIds",
            "Values.$": "States.Array($.instance_id)"
          }
        ],
        "Comment.$": "$.script",
        "Parameters": {
          "commands.$": "States.Array($.commandline)"
        }
      },
      "ResultPath": "$.command",
      "Resource": "arn:aws:states:::aws-sdk:ssm:sendCommand",
      "Next": "ListCommandInvocations"
    },
    "ListCommandInvocations": {
      "Type": "Task",
      "Parameters": {
        "CommandId.$": "$.command.Command.CommandId"
      },
      "ResultPath": "$.data",
      "Resource": "arn:aws:states:::aws-sdk:ssm:listCommandInvocations",
      "Next": "IsPentestComplete"
    },
    "IsPentestComplete": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.data.CommandInvocations[0]",
              "IsPresent": true
            },
            {
              "Variable": "$.data.CommandInvocations[0].Status",
              "StringEquals": "Success"
            }
          ],
          "Next": "StopKali"
        },
        {
          "Variable": "$.scratch.counter",
          "NumericGreaterThan": 120,
          "Next": "StopKali"
        }
      ],
      "Default": "WaitForCommand"
    },
    "StopKali": {
      "Type": "Task",
      "End": true,
      "Parameters": {
        "InstanceIds.$": "States.Array($.instance_id)"
      },
      "Resource": "arn:aws:states:::aws-sdk:ec2:stopInstances"
    },
    "WaitForCommand": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "IncrementCommandCount"
    },
    "IncrementCommandCount": {
      "Type": "Pass",
      "Next": "ListCommandInvocations",
      "Parameters": {
        "counter.$": "States.MathAdd($.scratch.counter, 1)"
      },
      "ResultPath": "$.scratch"
    }
  }
}
